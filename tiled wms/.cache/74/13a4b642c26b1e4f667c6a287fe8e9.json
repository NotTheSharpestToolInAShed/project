{"id":"node_modules/node-powershell/lib/PSCommand.js","dependencies":[{"name":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\package.json","includedInParent":true,"mtime":1597409716302},{"name":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\node_modules\\node-powershell\\package.json","includedInParent":true,"mtime":1597409715867},{"name":"./utils","loc":{"line":1,"column":37},"parent":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\node_modules\\node-powershell\\lib\\PSCommand.js","resolved":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\node_modules\\node-powershell\\lib\\utils.js"},{"name":"./errors","loc":{"line":5,"column":12},"parent":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\node_modules\\node-powershell\\lib\\PSCommand.js","resolved":"C:\\Users\\HP\\Desktop\\Please github me\\project\\tiled wms\\node_modules\\node-powershell\\lib\\errors.js"}],"generated":{"js":"const { convertToPSParam } = require('./utils');\nconst {\n  PS_ARG_MISS_ERROR,\n  PS_ARG_TYPE_ERROR,\n} = require('./errors');\n\nclass PSCommand {\n  constructor(command) {\n    if(!command) {\n      throw new PS_ARG_MISS_ERROR('Command is missing');\n    }\n    if(typeof command !== 'string') {\n      throw new PS_ARG_TYPE_ERROR('Command must be a string');\n    }\n\n    this.command = command;\n  }\n  addArgument(argument) {\n    if(!argument) {\n      throw new PS_ARG_MISS_ERROR('Argument is missing');\n    }\n    if(typeof argument !== 'string') {\n      throw new PS_ARG_TYPE_ERROR('Argument must be a string');\n    }\n\n    return new this.constructor(`${this.command} ${argument}`);\n  }\n  addParameter(parameter) {\n    if(!parameter) {\n      throw new PS_ARG_MISS_ERROR('Parameter is missing');\n    }\n    if(typeof parameter !== 'object' || Object.keys(parameter).length === 0) {\n      throw new PS_ARG_TYPE_ERROR('Parameter must be an object containing at least one key');\n    }\n\n    // calc param structure\n    const paramKeys = Object.keys(parameter);\n    let paramKey;\n    let paramValue;\n    if(paramKeys.length === 1) {\n      // param is {name: value}\n      [paramKey] = paramKeys;\n      paramValue = parameter[paramKey];\n    } else if(paramKeys.length === 2 && paramKeys[0] === 'name' && paramKeys[1] === 'value') {\n      // param is {name: '', value: ''}\n      paramKey = parameter.name;\n      paramValue = parameter.value;\n    } else {\n      throw new PS_ARG_TYPE_ERROR('All params must be in either {name: value} or {name: \"\", value: \"\"} structure');\n    }\n\n    // cast a parameter value from JS data types to PowerShell data types.\n    paramValue = convertToPSParam(paramValue);\n    paramValue = paramValue ? ` ${paramValue}` : '';\n\n    return new this.constructor(`${this.command} -${paramKey}${paramValue}`);\n  }\n  clone() {\n    return new this.constructor(this.command);\n  }\n}\n\nmodule.exports = PSCommand;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/node-powershell/lib/PSCommand.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}}],"sources":{"node_modules/node-powershell/lib/PSCommand.js":"const { convertToPSParam } = require('./utils');\nconst {\n  PS_ARG_MISS_ERROR,\n  PS_ARG_TYPE_ERROR,\n} = require('./errors');\n\nclass PSCommand {\n  constructor(command) {\n    if(!command) {\n      throw new PS_ARG_MISS_ERROR('Command is missing');\n    }\n    if(typeof command !== 'string') {\n      throw new PS_ARG_TYPE_ERROR('Command must be a string');\n    }\n\n    this.command = command;\n  }\n  addArgument(argument) {\n    if(!argument) {\n      throw new PS_ARG_MISS_ERROR('Argument is missing');\n    }\n    if(typeof argument !== 'string') {\n      throw new PS_ARG_TYPE_ERROR('Argument must be a string');\n    }\n\n    return new this.constructor(`${this.command} ${argument}`);\n  }\n  addParameter(parameter) {\n    if(!parameter) {\n      throw new PS_ARG_MISS_ERROR('Parameter is missing');\n    }\n    if(typeof parameter !== 'object' || Object.keys(parameter).length === 0) {\n      throw new PS_ARG_TYPE_ERROR('Parameter must be an object containing at least one key');\n    }\n\n    // calc param structure\n    const paramKeys = Object.keys(parameter);\n    let paramKey;\n    let paramValue;\n    if(paramKeys.length === 1) {\n      // param is {name: value}\n      [paramKey] = paramKeys;\n      paramValue = parameter[paramKey];\n    } else if(paramKeys.length === 2 && paramKeys[0] === 'name' && paramKeys[1] === 'value') {\n      // param is {name: '', value: ''}\n      paramKey = parameter.name;\n      paramValue = parameter.value;\n    } else {\n      throw new PS_ARG_TYPE_ERROR('All params must be in either {name: value} or {name: \"\", value: \"\"} structure');\n    }\n\n    // cast a parameter value from JS data types to PowerShell data types.\n    paramValue = convertToPSParam(paramValue);\n    paramValue = paramValue ? ` ${paramValue}` : '';\n\n    return new this.constructor(`${this.command} -${paramKey}${paramValue}`);\n  }\n  clone() {\n    return new this.constructor(this.command);\n  }\n}\n\nmodule.exports = PSCommand;\n"},"lineCount":64}},"error":null,"hash":"77f18649dbd432f2dc935469bb648054","cacheData":{"env":{}}}