{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "NodeBase",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./NodeBase'",
      "raw" : "'./NodeBase'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Envelope",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Envelope'",
      "raw" : "'../../geom/Envelope'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Assert",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../util/Assert'",
      "raw" : "'../../util/Assert'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Key",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./Key'",
      "raw" : "'./Key'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "Node",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "type" : "Super"
                  },
                  "arguments" : null,
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "Node",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_env",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_centrex",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_centrey",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_level",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "env",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                }, {
                  "id" : {
                    "name" : "level",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 1,
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_env",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "env",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_level",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "level",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_centrex",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "operator" : "/",
                    "left" : {
                      "operator" : "+",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "env",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMinX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "env",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMaxX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_centrey",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "operator" : "/",
                    "left" : {
                      "operator" : "+",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "env",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMinY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "env",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getMaxY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "env",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "key",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Key",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "env",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "node",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Node",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "key",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getEnvelope",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "key",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getLevel",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "node",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createExpanded",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "node",
              "type" : "Identifier"
            }, {
              "name" : "addEnv",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "expandEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Envelope",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "addEnv",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "node",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "name" : "expandEnv",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "expandToInclude",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "_env",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "largerNode",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Node",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "createNode",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "expandEnv",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "node",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "name" : "largerNode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "insertNode",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "node",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "name" : "largerNode",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "find",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "searchEnv",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "subnodeIndex",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "NodeBase",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getSubnodeIndex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "searchEnv",
                      "type" : "Identifier"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrey",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "subnodeIndex",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "-",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "type" : "ThisExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_subnode",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "subnodeIndex",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_subnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "subnodeIndex",
                          "type" : "Identifier"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "name" : "node",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "find",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "searchEnv",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "type" : "ThisExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isSearchMatch",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "searchEnv",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "searchEnv",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_env",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "intersects",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "searchEnv",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getSubnode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "index",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_subnode",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "index",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_subnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "index",
                          "type" : "Identifier"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "createSubnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "index",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "object" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_subnode",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "property" : {
                    "name" : "index",
                    "type" : "Identifier"
                  },
                  "computed" : true,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getEnvelope",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_env",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "searchEnv",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "subnodeIndex",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "NodeBase",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getSubnodeIndex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "searchEnv",
                      "type" : "Identifier"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrey",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "subnodeIndex",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "-",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "getSubnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "subnodeIndex",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "name" : "node",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "searchEnv",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "argument" : {
                      "type" : "ThisExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createSubnode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "index",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "minx",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0.0",
                    "raw" : "0.0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "maxx",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0.0",
                    "raw" : "0.0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "miny",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0.0",
                    "raw" : "0.0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "maxy",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0.0",
                    "raw" : "0.0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "discriminant" : {
                  "name" : "index",
                  "type" : "Identifier"
                },
                "cases" : [ {
                  "test" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "consequent" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "minx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMinX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrex",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "miny",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMinY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxy",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrey",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "label" : null,
                    "type" : "BreakStatement"
                  } ],
                  "type" : "SwitchCase"
                }, {
                  "test" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "consequent" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "minx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrex",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMaxX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "miny",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMinY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxy",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrey",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "label" : null,
                    "type" : "BreakStatement"
                  } ],
                  "type" : "SwitchCase"
                }, {
                  "test" : {
                    "value" : "2",
                    "raw" : "2",
                    "type" : "Literal"
                  },
                  "consequent" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "minx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMinX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrex",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "miny",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrey",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxy",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMaxY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "label" : null,
                    "type" : "BreakStatement"
                  } ],
                  "type" : "SwitchCase"
                }, {
                  "test" : {
                    "value" : "3",
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "consequent" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "minx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrex",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxx",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMaxX",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "miny",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_centrey",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "maxy",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_env",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "getMaxY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "label" : null,
                    "type" : "BreakStatement"
                  } ],
                  "type" : "SwitchCase"
                } ],
                "type" : "SwitchStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "sqEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Envelope",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "minx",
                      "type" : "Identifier"
                    }, {
                      "name" : "maxx",
                      "type" : "Identifier"
                    }, {
                      "name" : "miny",
                      "type" : "Identifier"
                    }, {
                      "name" : "maxy",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "node",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "Node",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "sqEnv",
                      "type" : "Identifier"
                    }, {
                      "operator" : "-",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_level",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "node",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "insertNode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "node",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "Assert",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isTrue",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "operator" : "||",
                    "left" : {
                      "operator" : "===",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_env",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_env",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "contains",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "object" : {
                          "name" : "node",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "_env",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "BinaryExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "index",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "NodeBase",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getSubnodeIndex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "_env",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrex",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_centrey",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "name" : "node",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "_level",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "operator" : "-",
                    "left" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_level",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_subnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "index",
                          "type" : "Identifier"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "node",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "childNode",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "createSubnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "index",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "childNode",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "insertNode",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "node",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_subnode",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "index",
                          "type" : "Identifier"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "childNode",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : {
        "name" : "NodeBase",
        "type" : "Identifier"
      },
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}