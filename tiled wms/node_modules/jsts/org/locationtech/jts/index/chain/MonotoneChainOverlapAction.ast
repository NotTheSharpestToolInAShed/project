{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "LineSegment",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/LineSegment'",
      "raw" : "'../../geom/LineSegment'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "MonotoneChainOverlapAction",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "MonotoneChainOverlapAction",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_overlapSeg1",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "LineSegment",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_overlapSeg2",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "LineSegment",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "overlap",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 2,
                    "raw" : "2",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "seg1",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "seg2",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 1,
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 4,
                      "raw" : "4",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "mc1",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "start1",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "mc2",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 2,
                            "raw" : "2",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "start2",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 3,
                            "raw" : "3",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "name" : "mc1",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getLineSegment",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "start1",
                          "type" : "Identifier"
                        }, {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_overlapSeg1",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "name" : "mc2",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getLineSegment",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "start2",
                          "type" : "Identifier"
                        }, {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_overlapSeg2",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "overlap",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_overlapSeg1",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        }, {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_overlapSeg2",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}