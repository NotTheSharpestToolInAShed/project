{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Location",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Location'",
      "raw" : "'../../geom/Location'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/CoordinateList'",
      "raw" : "'../../geom/CoordinateList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "WKTWriter",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../io/WKTWriter'",
      "raw" : "'../../io/WKTWriter'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateArraySequence",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/impl/CoordinateArraySequence'",
      "raw" : "'../../geom/impl/CoordinateArraySequence'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "IsValidOp",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../valid/IsValidOp'",
      "raw" : "'../valid/IsValidOp'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "LinearRing",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/LinearRing'",
      "raw" : "'../../geom/LinearRing'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Exception",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/lang/Exception'",
      "raw" : "'../../../../../java/lang/Exception'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Orientation",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../algorithm/Orientation'",
      "raw" : "'../../algorithm/Orientation'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "System",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/lang/System'",
      "raw" : "'../../../../../java/lang/System'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateArrays",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/CoordinateArrays'",
      "raw" : "'../../geom/CoordinateArrays'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/ArrayList'",
      "raw" : "'../../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Comparator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/util/Comparator'",
      "raw" : "'../../../../../java/util/Comparator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "IndexedPointInAreaLocator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../algorithm/locate/IndexedPointInAreaLocator'",
      "raw" : "'../../algorithm/locate/IndexedPointInAreaLocator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Assert",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../util/Assert'",
      "raw" : "'../../util/Assert'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "EdgeRing",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "EdgeRing",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_factory",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_deList",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_lowestEdge",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ring",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_locator",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ringPts",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_holes",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shell",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isProcessed",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isIncludedSet",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isIncluded",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "factory",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_factory",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "factory",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "findDirEdgesInRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "startDE",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "de",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "startDE",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "edges",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "ArrayList",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "edges",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "de",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "de",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "de",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getNext",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "Assert",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isTrue",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "!==",
                        "left" : {
                          "name" : "de",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "value" : "found null DE in ring",
                        "raw" : "\"found null DE in ring\"",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "Assert",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isTrue",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "||",
                        "left" : {
                          "operator" : "===",
                          "left" : {
                            "name" : "de",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "startDE",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "operator" : "!",
                          "prefix" : true,
                          "argument" : {
                            "callee" : {
                              "object" : {
                                "name" : "de",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "isInRing",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "UnaryExpression"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "value" : "found DE already in ring",
                        "raw" : "\"found DE already in ring\"",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "de",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "startDE",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "DoWhileStatement"
              }, {
                "argument" : {
                  "name" : "edges",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "addEdge",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "coords",
              "type" : "Identifier"
            }, {
              "name" : "isForward",
              "type" : "Identifier"
            }, {
              "name" : "coordList",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "name" : "isForward",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "body" : [ {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "name" : "coords",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "length",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "update" : {
                      "operator" : "++",
                      "prefix" : false,
                      "argument" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "body" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "coordList",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "add",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "object" : {
                              "name" : "coords",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "i",
                              "type" : "Identifier"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          }, {
                            "value" : false,
                            "raw" : "false",
                            "type" : "Literal"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "body" : [ {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "operator" : "-",
                          "left" : {
                            "object" : {
                              "name" : "coords",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "length",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "operator" : ">=",
                      "left" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "update" : {
                      "operator" : "--",
                      "prefix" : false,
                      "argument" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "body" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "coordList",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "add",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "object" : {
                              "name" : "coords",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "i",
                              "type" : "Identifier"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          }, {
                            "value" : false,
                            "raw" : "false",
                            "type" : "Literal"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "findEdgeRingContaining",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "testEr",
              "type" : "Identifier"
            }, {
              "name" : "erList",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "testRing",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "testEr",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getRing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "testEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "testRing",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getEnvelopeInternal",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "testPt",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "testRing",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getCoordinateN",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "minRing",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "minRingEnv",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "it",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "erList",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "iterator",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "it",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "hasNext",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "update" : null,
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "tryEdgeRing",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "it",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "next",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "tryRing",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "tryEdgeRing",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getRing",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "tryShellEnv",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "tryRing",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getEnvelopeInternal",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "callee" : {
                        "object" : {
                          "name" : "tryShellEnv",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "equals",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "testEnv",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "consequent" : {
                      "label" : null,
                      "type" : "ContinueStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "test" : {
                      "operator" : "!",
                      "prefix" : true,
                      "argument" : {
                        "callee" : {
                          "object" : {
                            "name" : "tryShellEnv",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "contains",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "testEnv",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "UnaryExpression"
                    },
                    "consequent" : {
                      "label" : null,
                      "type" : "ContinueStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "testPt",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "CoordinateArrays",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "ptNotInList",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "callee" : {
                            "object" : {
                              "name" : "testRing",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getCoordinates",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        }, {
                          "callee" : {
                            "object" : {
                              "name" : "tryEdgeRing",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getCoordinates",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "isContained",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "tryEdgeRing",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "isInRing",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "testPt",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "name" : "isContained",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "body" : [ {
                        "test" : {
                          "operator" : "||",
                          "left" : {
                            "operator" : "===",
                            "left" : {
                              "name" : "minRing",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "value" : null,
                              "raw" : "null",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "minRingEnv",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "contains",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "tryShellEnv",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "body" : [ {
                            "expression" : {
                              "operator" : "=",
                              "left" : {
                                "name" : "minRing",
                                "type" : "Identifier"
                              },
                              "right" : {
                                "name" : "tryEdgeRing",
                                "type" : "Identifier"
                              },
                              "type" : "AssignmentExpression"
                            },
                            "type" : "ExpressionStatement"
                          }, {
                            "expression" : {
                              "operator" : "=",
                              "left" : {
                                "name" : "minRingEnv",
                                "type" : "Identifier"
                              },
                              "right" : {
                                "callee" : {
                                  "object" : {
                                    "callee" : {
                                      "object" : {
                                        "name" : "minRing",
                                        "type" : "Identifier"
                                      },
                                      "property" : {
                                        "name" : "getRing",
                                        "type" : "Identifier"
                                      },
                                      "computed" : false,
                                      "type" : "MemberExpression"
                                    },
                                    "arguments" : [ ],
                                    "type" : "CallExpression"
                                  },
                                  "property" : {
                                    "name" : "getEnvelopeInternal",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              },
                              "type" : "AssignmentExpression"
                            },
                            "type" : "ExpressionStatement"
                          } ],
                          "type" : "BlockStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "name" : "minRing",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isIncluded",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_isIncluded",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getCoordinates",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ringPts",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "coordList",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "name" : "CoordinateList",
                          "type" : "Identifier"
                        },
                        "arguments" : [ ],
                        "type" : "NewExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "_deList",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "property" : {
                              "name" : "iterator",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "callee" : {
                        "object" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "hasNext",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "update" : null,
                    "body" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "de",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "i",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "next",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "edge",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "de",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getEdge",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "EdgeRing",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "addEdge",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "callee" : {
                              "object" : {
                                "callee" : {
                                  "object" : {
                                    "name" : "edge",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getLine",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              },
                              "property" : {
                                "name" : "getCoordinates",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          }, {
                            "callee" : {
                              "object" : {
                                "name" : "de",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getEdgeDirection",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          }, {
                            "name" : "coordList",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_ringPts",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "coordList",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "toCoordinateArray",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_ringPts",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isIncludedSet",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_isIncludedSet",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isValid",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "getCoordinates",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_ringPts",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "length",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : "3",
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "getRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "IsValidOp",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isValid",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ring",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "build",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "startDE",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "de",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "name" : "startDE",
                    "type" : "Identifier"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "de",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "de",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setRing",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "type" : "ThisExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "de",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "de",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getNext",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "Assert",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isTrue",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "!==",
                        "left" : {
                          "name" : "de",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "value" : "found null DE in ring",
                        "raw" : "\"found null DE in ring\"",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "Assert",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isTrue",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "||",
                        "left" : {
                          "operator" : "===",
                          "left" : {
                            "name" : "de",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "startDE",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "operator" : "!",
                          "prefix" : true,
                          "argument" : {
                            "callee" : {
                              "object" : {
                                "name" : "de",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "isInRing",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "type" : "UnaryExpression"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "value" : "found DE already in ring",
                        "raw" : "\"found DE already in ring\"",
                        "type" : "Literal"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "de",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "startDE",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "DoWhileStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isInRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "pt",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "operator" : "!==",
                  "left" : {
                    "object" : {
                      "name" : "Location",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "EXTERIOR",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "getLocator",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "property" : {
                        "name" : "locate",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "pt",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isOuterHole",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "!",
                  "prefix" : true,
                  "argument" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "UnaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "operator" : "!",
                  "prefix" : true,
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "hasShell",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getPolygon",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "holeLR",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_holes",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "holeLR",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "callee" : {
                              "name" : "Array",
                              "type" : "Identifier"
                            },
                            "arguments" : [ {
                              "callee" : {
                                "object" : {
                                  "object" : {
                                    "type" : "ThisExpression"
                                  },
                                  "property" : {
                                    "name" : "_holes",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "property" : {
                                  "name" : "size",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            } ],
                            "type" : "NewExpression"
                          },
                          "property" : {
                            "name" : "fill",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_holes",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "size",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "update" : {
                      "operator" : "++",
                      "prefix" : false,
                      "argument" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "body" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "object" : {
                              "name" : "holeLR",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "i",
                              "type" : "Identifier"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "object" : {
                                  "type" : "ThisExpression"
                                },
                                "property" : {
                                  "name" : "_holes",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "property" : {
                                "name" : "get",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "i",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "poly",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_factory",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "createPolygon",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_ring",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "name" : "holeLR",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "poly",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isHole",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_isHole",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isProcessed",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_isProcessed",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "addHole",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "LinearRing",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "hole",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "===",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_holes",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "value" : null,
                        "raw" : "null",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "expression" : {
                        "operator" : "=",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_holes",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "callee" : {
                            "name" : "ArrayList",
                            "type" : "Identifier"
                          },
                          "arguments" : [ ],
                          "type" : "NewExpression"
                        },
                        "type" : "AssignmentExpression"
                      },
                      "type" : "ExpressionStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_holes",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "add",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "hole",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "instanceof",
                    "left" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "name" : "EdgeRing",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "holeER",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "name" : "holeER",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "setShell",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "type" : "ThisExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "hole",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "holeER",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getRing",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "===",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_holes",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_holes",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "callee" : {
                              "name" : "ArrayList",
                              "type" : "Identifier"
                            },
                            "arguments" : [ ],
                            "type" : "NewExpression"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_holes",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "add",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "hole",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "setIncluded",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "isIncluded",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isIncluded",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "isIncluded",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isIncludedSet",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getOuterHole",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_deList",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "de",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_deList",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "get",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "adjRing",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "callee" : {
                              "object" : {
                                "name" : "de",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getSym",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "property" : {
                            "name" : "getRing",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "callee" : {
                        "object" : {
                          "name" : "adjRing",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "isOuterHole",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "name" : "adjRing",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "computeHole",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "ring",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "getRing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "Orientation",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "isCCW",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "ring",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getCoordinates",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "hasShell",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "operator" : "!==",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shell",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isOuterShell",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "operator" : "!==",
                  "left" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "getOuterHole",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getLineString",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "getCoordinates",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_factory",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "createLineString",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ringPts",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "toString",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "WKTWriter",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "toLineString",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "name" : "CoordinateArraySequence",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "getCoordinates",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "NewExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getLocator",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_locator",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_locator",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "name" : "IndexedPointInAreaLocator",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "callee" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "getRing",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        } ],
                        "type" : "NewExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_locator",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getShell",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shell",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "type" : "ThisExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "add",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "de",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_deList",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "add",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "de",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ring",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_ring",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "getCoordinates",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_ringPts",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "length",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : "3",
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "name" : "System",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "out",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "println",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_ringPts",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "block" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_ring",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_factory",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "createLinearRing",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_ringPts",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "handler" : {
                  "param" : {
                    "name" : "ex",
                    "type" : "Identifier"
                  },
                  "body" : {
                    "body" : [ {
                      "test" : {
                        "operator" : "instanceof",
                        "left" : {
                          "name" : "ex",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "Exception",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "object" : {
                                  "name" : "System",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "out",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "property" : {
                                "name" : "println",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "_ringPts",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : {
                        "argument" : {
                          "name" : "ex",
                          "type" : "Identifier"
                        },
                        "type" : "ThrowStatement"
                      },
                      "type" : "IfStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "type" : "CatchClause"
                },
                "finalizer" : {
                  "body" : [ ],
                  "type" : "BlockStatement"
                },
                "type" : "TryStatement"
              }, {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_ring",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "updateIncluded",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "isHole",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_deList",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "de",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_deList",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "property" : {
                            "name" : "get",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "adjShell",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "callee" : {
                              "object" : {
                                "callee" : {
                                  "object" : {
                                    "name" : "de",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getSym",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ ],
                                "type" : "CallExpression"
                              },
                              "property" : {
                                "name" : "getRing",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "property" : {
                            "name" : "getShell",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "operator" : "!==",
                        "left" : {
                          "name" : "adjShell",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "adjShell",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "isIncludedSet",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "setIncluded",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "operator" : "!",
                            "prefix" : true,
                            "argument" : {
                              "callee" : {
                                "object" : {
                                  "name" : "adjShell",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "isIncluded",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "UnaryExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      }, {
                        "argument" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "setShell",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "shell",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_shell",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "shell",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "setProcessed",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "isProcessed",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_isProcessed",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "isProcessed",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "id" : {
      "name" : "EnvelopeComparator",
      "type" : "Identifier"
    },
    "body" : {
      "body" : [ {
        "key" : {
          "name" : "compare",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "obj0",
            "type" : "Identifier"
          }, {
            "name" : "obj1",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "r0",
                  "type" : "Identifier"
                },
                "init" : {
                  "name" : "obj0",
                  "type" : "Identifier"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "r1",
                  "type" : "Identifier"
                },
                "init" : {
                  "name" : "obj1",
                  "type" : "Identifier"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "argument" : {
                "callee" : {
                  "object" : {
                    "callee" : {
                      "object" : {
                        "callee" : {
                          "object" : {
                            "name" : "r0",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getRing",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "property" : {
                        "name" : "getEnvelope",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "property" : {
                    "name" : "compareTo",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "object" : {
                      "callee" : {
                        "object" : {
                          "name" : "r1",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getRing",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "property" : {
                      "name" : "getEnvelope",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "interfaces_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "elements" : [ {
                  "name" : "Comparator",
                  "type" : "Identifier"
                } ],
                "type" : "ArrayExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "get",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      } ],
      "type" : "ClassBody"
    },
    "superClass" : null,
    "type" : "ClassDeclaration"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "EdgeRing",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "EnvelopeComparator",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "EnvelopeComparator",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}