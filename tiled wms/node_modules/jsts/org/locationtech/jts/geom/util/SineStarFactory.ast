{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../Coordinate'",
      "raw" : "'../Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "GeometricShapeFactory",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../util/GeometricShapeFactory'",
      "raw" : "'../../util/GeometricShapeFactory'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "SineStarFactory",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "type" : "Super"
                  },
                  "arguments" : null,
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "SineStarFactory",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_numArms",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : "8",
                    "raw" : "8",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_armLengthRatio",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : "0.5",
                    "raw" : "0.5",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 0,
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "GeometricShapeFactory",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "object" : {
                            "name" : "constructor_",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "call",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "type" : "ThisExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 1,
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "geomFact",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "name" : "GeometricShapeFactory",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "object" : {
                              "name" : "constructor_",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "call",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "type" : "ThisExpression"
                        }, {
                          "name" : "geomFact",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "create",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "origin",
              "type" : "Identifier"
            }, {
              "name" : "size",
              "type" : "Identifier"
            }, {
              "name" : "nPts",
              "type" : "Identifier"
            }, {
              "name" : "nArms",
              "type" : "Identifier"
            }, {
              "name" : "armLengthRatio",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "gsf",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "SineStarFactory",
                      "type" : "Identifier"
                    },
                    "arguments" : [ ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "gsf",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setCentre",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "origin",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "gsf",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setSize",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "size",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "gsf",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setNumPoints",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "nPts",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "gsf",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setArmLengthRatio",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "armLengthRatio",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "gsf",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "setNumArms",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "nArms",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "poly",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "gsf",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "createSineStar",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "poly",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "setNumArms",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "numArms",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_numArms",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "numArms",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "setArmLengthRatio",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "armLengthRatio",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_armLengthRatio",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "name" : "armLengthRatio",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createSineStar",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "env",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_dim",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "getEnvelope",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "radius",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "/",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getWidth",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "value" : "2.0",
                      "raw" : "2.0",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "armRatio",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_armLengthRatio",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "armRatio",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0.0",
                    "raw" : "0.0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "name" : "armRatio",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "0.0",
                      "raw" : "0.0",
                      "type" : "Literal"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "armRatio",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "1.0",
                    "raw" : "1.0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "name" : "armRatio",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "1.0",
                      "raw" : "1.0",
                      "type" : "Literal"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "armMaxLen",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "*",
                    "left" : {
                      "name" : "armRatio",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "radius",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "insideRadius",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "*",
                    "left" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "armRatio",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "radius",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "centreX",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "+",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMinX",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "name" : "radius",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "centreY",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "+",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMinY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "name" : "radius",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "pts",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "callee" : {
                          "name" : "Array",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "operator" : "+",
                          "left" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_nPts",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        } ],
                        "type" : "NewExpression"
                      },
                      "property" : {
                        "name" : "fill",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "value" : null,
                      "raw" : "null",
                      "type" : "Literal"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "iPt",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_nPts",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "ptArcFrac",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "*",
                        "left" : {
                          "operator" : "/",
                          "left" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_nPts",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_numArms",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "armAngFrac",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "-",
                        "left" : {
                          "name" : "ptArcFrac",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "callee" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "floor",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "ptArcFrac",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "armAng",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "*",
                        "left" : {
                          "operator" : "*",
                          "left" : {
                            "value" : "2",
                            "raw" : "2",
                            "type" : "Literal"
                          },
                          "right" : {
                            "object" : {
                              "name" : "Math",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "PI",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "name" : "armAngFrac",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "armLenFrac",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "/",
                        "left" : {
                          "operator" : "+",
                          "left" : {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "cos",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "armAng",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "value" : "1.0",
                            "raw" : "1.0",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "value" : "2.0",
                          "raw" : "2.0",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "curveRadius",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "+",
                        "left" : {
                          "name" : "insideRadius",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "operator" : "*",
                          "left" : {
                            "name" : "armMaxLen",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "armLenFrac",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "ang",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "*",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "operator" : "/",
                          "left" : {
                            "operator" : "*",
                            "left" : {
                              "value" : "2",
                              "raw" : "2",
                              "type" : "Literal"
                            },
                            "right" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "PI",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "right" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_nPts",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "+",
                        "left" : {
                          "operator" : "*",
                          "left" : {
                            "name" : "curveRadius",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "cos",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "ang",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "name" : "centreX",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "declarations" : [ {
                      "id" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "operator" : "+",
                        "left" : {
                          "operator" : "*",
                          "left" : {
                            "name" : "curveRadius",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "Math",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "sin",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "ang",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "name" : "centreY",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "name" : "pts",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "operator" : "++",
                          "prefix" : false,
                          "argument" : {
                            "name" : "iPt",
                            "type" : "Identifier"
                          },
                          "type" : "UnaryExpression"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "coord",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "x",
                          "type" : "Identifier"
                        }, {
                          "name" : "y",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "name" : "pts",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "iPt",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "callee" : {
                      "name" : "Coordinate",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "object" : {
                        "name" : "pts",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "ring",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_geomFact",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "createLinearRing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "pts",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "poly",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_geomFact",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "createPolygon",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "ring",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "name" : "poly",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : {
        "name" : "GeometricShapeFactory",
        "type" : "Identifier"
      },
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}