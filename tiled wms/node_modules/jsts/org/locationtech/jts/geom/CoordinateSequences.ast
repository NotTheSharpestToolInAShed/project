{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "hasInterface",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../hasInterface'",
      "raw" : "'../../../../hasInterface'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./Coordinate'",
      "raw" : "'./Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Double",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/lang/Double'",
      "raw" : "'../../../../java/lang/Double'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CoordinateSequence",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./CoordinateSequence'",
      "raw" : "'./CoordinateSequence'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "CoordinateSequences",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "copyCoord",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "src",
              "type" : "Identifier"
            }, {
              "name" : "srcPos",
              "type" : "Identifier"
            }, {
              "name" : "dest",
              "type" : "Identifier"
            }, {
              "name" : "destPos",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "minDim",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "src",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "dest",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "dim",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "dim",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "minDim",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "dim",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "dest",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "destPos",
                        "type" : "Identifier"
                      }, {
                        "name" : "dim",
                        "type" : "Identifier"
                      }, {
                        "callee" : {
                          "object" : {
                            "name" : "src",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "srcPos",
                          "type" : "Identifier"
                        }, {
                          "name" : "dim",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "seq",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "3",
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "operator" : "&&",
                  "left" : {
                    "operator" : "===",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      }, {
                        "object" : {
                          "name" : "CoordinateSequence",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "X",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "-",
                        "left" : {
                          "name" : "n",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "object" : {
                          "name" : "CoordinateSequence",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "X",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "operator" : "===",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      }, {
                        "object" : {
                          "name" : "CoordinateSequence",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "Y",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "-",
                        "left" : {
                          "name" : "n",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "object" : {
                          "name" : "CoordinateSequence",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "Y",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "scroll",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 2,
                    "raw" : "2",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "callee" : {
                          "name" : "hasInterface",
                          "type" : "Identifier"
                        },
                        "arguments" : [ {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        }, {
                          "name" : "CoordinateSequence",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "object" : {
                          "name" : "Number",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "callee" : {
                            "name" : "isInteger",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 1,
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "LogicalExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "type" : "VariableDeclarator"
                        }, {
                          "id" : {
                            "name" : "indexOfFirstCoordinate",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 1,
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "expression" : {
                          "callee" : {
                            "object" : {
                              "name" : "CoordinateSequences",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "scroll",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "seq",
                            "type" : "Identifier"
                          }, {
                            "name" : "indexOfFirstCoordinate",
                            "type" : "Identifier"
                          }, {
                            "callee" : {
                              "object" : {
                                "name" : "CoordinateSequences",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "isRing",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "seq",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : {
                      "test" : {
                        "operator" : "&&",
                        "left" : {
                          "callee" : {
                            "name" : "hasInterface",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 0,
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          }, {
                            "name" : "CoordinateSequence",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "operator" : "instanceof",
                          "left" : {
                            "object" : {
                              "name" : "arguments",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "value" : 1,
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "computed" : true,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "name" : "Coordinate",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "LogicalExpression"
                      },
                      "consequent" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "seq",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 0,
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          }, {
                            "id" : {
                              "name" : "firstCoordinate",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "object" : {
                                "name" : "arguments",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "value" : 1,
                                "raw" : "1",
                                "type" : "Literal"
                              },
                              "computed" : true,
                              "type" : "MemberExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "declarations" : [ {
                            "id" : {
                              "name" : "i",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "CoordinateSequences",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "indexOf",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "firstCoordinate",
                                "type" : "Identifier"
                              }, {
                                "name" : "seq",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "test" : {
                            "operator" : "<=",
                            "left" : {
                              "name" : "i",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "value" : "0",
                              "raw" : "0",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "consequent" : {
                            "argument" : {
                              "value" : null,
                              "raw" : "null",
                              "type" : "Literal"
                            },
                            "type" : "ReturnStatement"
                          },
                          "alternate" : null,
                          "type" : "IfStatement"
                        }, {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "name" : "CoordinateSequences",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "scroll",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "seq",
                              "type" : "Identifier"
                            }, {
                              "name" : "i",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    },
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 3,
                      "raw" : "3",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "indexOfFirstCoordinate",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "ensureRing",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 2,
                            "raw" : "2",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "name" : "indexOfFirstCoordinate",
                          "type" : "Identifier"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "test" : {
                        "operator" : "<=",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "consequent" : {
                        "argument" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "ReturnStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "copy",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "seq",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "copy",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "last",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "test" : {
                            "name" : "ensureRing",
                            "type" : "Identifier"
                          },
                          "alternate" : {
                            "callee" : {
                              "object" : {
                                "name" : "seq",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "size",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ ],
                            "type" : "CallExpression"
                          },
                          "consequent" : {
                            "operator" : "-",
                            "left" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "size",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "right" : {
                              "value" : "1",
                              "raw" : "1",
                              "type" : "Literal"
                            },
                            "type" : "BinaryExpression"
                          },
                          "type" : "ConditionalExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "j",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "value" : "0",
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<",
                        "left" : {
                          "name" : "j",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "last",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "j",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "init" : {
                            "declarations" : [ {
                              "id" : {
                                "name" : "k",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "value" : "0",
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          },
                          "test" : {
                            "operator" : "<",
                            "left" : {
                              "name" : "k",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getDimension",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "update" : {
                            "operator" : "++",
                            "prefix" : false,
                            "argument" : {
                              "name" : "k",
                              "type" : "Identifier"
                            },
                            "type" : "UnaryExpression"
                          },
                          "body" : {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "setOrdinate",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "j",
                                "type" : "Identifier"
                              }, {
                                "name" : "k",
                                "type" : "Identifier"
                              }, {
                                "callee" : {
                                  "object" : {
                                    "name" : "copy",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getOrdinate",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ {
                                  "operator" : "%",
                                  "left" : {
                                    "operator" : "+",
                                    "left" : {
                                      "name" : "indexOfFirstCoordinate",
                                      "type" : "Identifier"
                                    },
                                    "right" : {
                                      "name" : "j",
                                      "type" : "Identifier"
                                    },
                                    "type" : "BinaryExpression"
                                  },
                                  "right" : {
                                    "name" : "last",
                                    "type" : "Identifier"
                                  },
                                  "type" : "BinaryExpression"
                                }, {
                                  "name" : "k",
                                  "type" : "Identifier"
                                } ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          },
                          "type" : "ForStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    }, {
                      "test" : {
                        "name" : "ensureRing",
                        "type" : "Identifier"
                      },
                      "consequent" : {
                        "body" : [ {
                          "init" : {
                            "declarations" : [ {
                              "id" : {
                                "name" : "k",
                                "type" : "Identifier"
                              },
                              "init" : {
                                "value" : "0",
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "type" : "VariableDeclarator"
                            } ],
                            "kind" : "let",
                            "type" : "VariableDeclaration"
                          },
                          "test" : {
                            "operator" : "<",
                            "left" : {
                              "name" : "k",
                              "type" : "Identifier"
                            },
                            "right" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getDimension",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ ],
                              "type" : "CallExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "update" : {
                            "operator" : "++",
                            "prefix" : false,
                            "argument" : {
                              "name" : "k",
                              "type" : "Identifier"
                            },
                            "type" : "UnaryExpression"
                          },
                          "body" : {
                            "expression" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "setOrdinate",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "last",
                                "type" : "Identifier"
                              }, {
                                "name" : "k",
                                "type" : "Identifier"
                              }, {
                                "callee" : {
                                  "object" : {
                                    "name" : "seq",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "getOrdinate",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ {
                                  "value" : "0",
                                  "raw" : "0",
                                  "type" : "Literal"
                                }, {
                                  "name" : "k",
                                  "type" : "Identifier"
                                } ],
                                "type" : "CallExpression"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "ExpressionStatement"
                          },
                          "type" : "ForStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "alternate" : null,
                      "type" : "IfStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "isEqual",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "cs1",
              "type" : "Identifier"
            }, {
              "name" : "cs2",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "cs1Size",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "cs1",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "cs2Size",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "cs2",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "!==",
                  "left" : {
                    "name" : "cs1Size",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "cs2Size",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : false,
                    "raw" : "false",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "dim",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "min",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "cs1",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "cs2",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "cs1Size",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "d",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "dim",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "update" : {
                      "operator" : "++",
                      "prefix" : false,
                      "argument" : {
                        "name" : "d",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "body" : {
                      "body" : [ {
                        "declarations" : [ {
                          "id" : {
                            "name" : "v1",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "cs1",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getOrdinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "i",
                              "type" : "Identifier"
                            }, {
                              "name" : "d",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "declarations" : [ {
                          "id" : {
                            "name" : "v2",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "callee" : {
                              "object" : {
                                "name" : "cs2",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getOrdinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "i",
                              "type" : "Identifier"
                            }, {
                              "name" : "d",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      }, {
                        "test" : {
                          "operator" : "===",
                          "left" : {
                            "callee" : {
                              "object" : {
                                "name" : "cs1",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getOrdinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "i",
                              "type" : "Identifier"
                            }, {
                              "name" : "d",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "cs2",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "getOrdinate",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "i",
                              "type" : "Identifier"
                            }, {
                              "name" : "d",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "label" : null,
                          "type" : "ContinueStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      }, {
                        "test" : {
                          "operator" : "&&",
                          "left" : {
                            "callee" : {
                              "object" : {
                                "name" : "Double",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "isNaN",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "v1",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "right" : {
                            "callee" : {
                              "object" : {
                                "name" : "Double",
                                "type" : "Identifier"
                              },
                              "property" : {
                                "name" : "isNaN",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "name" : "v2",
                              "type" : "Identifier"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "BinaryExpression"
                        },
                        "consequent" : {
                          "label" : null,
                          "type" : "ContinueStatement"
                        },
                        "alternate" : null,
                        "type" : "IfStatement"
                      }, {
                        "argument" : {
                          "value" : false,
                          "raw" : "false",
                          "type" : "Literal"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "type" : "ForStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "value" : true,
                  "raw" : "true",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "minCoordinateIndex",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 1,
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "argument" : {
                      "callee" : {
                        "object" : {
                          "name" : "CoordinateSequences",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "minCoordinateIndex",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "seq",
                        "type" : "Identifier"
                      }, {
                        "value" : "0",
                        "raw" : "0",
                        "type" : "Literal"
                      }, {
                        "operator" : "-",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "seq",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "size",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "===",
                    "left" : {
                      "name" : "arguments.length",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : 3,
                      "raw" : "3",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 0,
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "from",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 1,
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      }, {
                        "id" : {
                          "name" : "to",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "object" : {
                            "name" : "arguments",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "value" : 2,
                            "raw" : "2",
                            "type" : "Literal"
                          },
                          "computed" : true,
                          "type" : "MemberExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "minCoordIndex",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "operator" : "-",
                          "prefix" : true,
                          "argument" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "UnaryExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "minCoord",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "name" : "from",
                            "type" : "Identifier"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<=",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "to",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "declarations" : [ {
                            "id" : {
                              "name" : "testCoord",
                              "type" : "Identifier"
                            },
                            "init" : {
                              "callee" : {
                                "object" : {
                                  "name" : "seq",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getCoordinate",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "i",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            },
                            "type" : "VariableDeclarator"
                          } ],
                          "kind" : "let",
                          "type" : "VariableDeclaration"
                        }, {
                          "test" : {
                            "operator" : "||",
                            "left" : {
                              "operator" : "===",
                              "left" : {
                                "name" : "minCoord",
                                "type" : "Identifier"
                              },
                              "right" : {
                                "value" : null,
                                "raw" : "null",
                                "type" : "Literal"
                              },
                              "type" : "BinaryExpression"
                            },
                            "right" : {
                              "operator" : ">",
                              "left" : {
                                "callee" : {
                                  "object" : {
                                    "name" : "minCoord",
                                    "type" : "Identifier"
                                  },
                                  "property" : {
                                    "name" : "compareTo",
                                    "type" : "Identifier"
                                  },
                                  "computed" : false,
                                  "type" : "MemberExpression"
                                },
                                "arguments" : [ {
                                  "name" : "testCoord",
                                  "type" : "Identifier"
                                } ],
                                "type" : "CallExpression"
                              },
                              "right" : {
                                "value" : "0",
                                "raw" : "0",
                                "type" : "Literal"
                              },
                              "type" : "BinaryExpression"
                            },
                            "type" : "BinaryExpression"
                          },
                          "consequent" : {
                            "body" : [ {
                              "expression" : {
                                "operator" : "=",
                                "left" : {
                                  "name" : "minCoord",
                                  "type" : "Identifier"
                                },
                                "right" : {
                                  "name" : "testCoord",
                                  "type" : "Identifier"
                                },
                                "type" : "AssignmentExpression"
                              },
                              "type" : "ExpressionStatement"
                            }, {
                              "expression" : {
                                "operator" : "=",
                                "left" : {
                                  "name" : "minCoordIndex",
                                  "type" : "Identifier"
                                },
                                "right" : {
                                  "name" : "i",
                                  "type" : "Identifier"
                                },
                                "type" : "AssignmentExpression"
                              },
                              "type" : "ExpressionStatement"
                            } ],
                            "type" : "BlockStatement"
                          },
                          "alternate" : null,
                          "type" : "IfStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    }, {
                      "argument" : {
                        "name" : "minCoordIndex",
                        "type" : "Identifier"
                      },
                      "type" : "ReturnStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "extend",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "fact",
              "type" : "Identifier"
            }, {
              "name" : "seq",
              "type" : "Identifier"
            }, {
              "name" : "size",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "newseq",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "fact",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "create",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "size",
                      "type" : "Identifier"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "CoordinateSequences",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "copy",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "seq",
                    "type" : "Identifier"
                  }, {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  }, {
                    "name" : "newseq",
                    "type" : "Identifier"
                  }, {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  }, {
                    "name" : "n",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "init" : {
                      "declarations" : [ {
                        "id" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "name" : "n",
                          "type" : "Identifier"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    },
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "update" : {
                      "operator" : "++",
                      "prefix" : false,
                      "argument" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "UnaryExpression"
                    },
                    "body" : {
                      "expression" : {
                        "callee" : {
                          "object" : {
                            "name" : "CoordinateSequences",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "copy",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "seq",
                          "type" : "Identifier"
                        }, {
                          "operator" : "-",
                          "left" : {
                            "name" : "n",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        }, {
                          "name" : "newseq",
                          "type" : "Identifier"
                        }, {
                          "name" : "i",
                          "type" : "Identifier"
                        }, {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "ExpressionStatement"
                    },
                    "type" : "ForStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "name" : "newseq",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "reverse",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "seq",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "last",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "-",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "size",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "mid",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "trunc",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "operator" : "/",
                      "left" : {
                        "name" : "last",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "2",
                        "raw" : "2",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "mid",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "CoordinateSequences",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "swap",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "seq",
                        "type" : "Identifier"
                      }, {
                        "name" : "i",
                        "type" : "Identifier"
                      }, {
                        "operator" : "-",
                        "left" : {
                          "name" : "last",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "swap",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "seq",
              "type" : "Identifier"
            }, {
              "name" : "i",
              "type" : "Identifier"
            }, {
              "name" : "j",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "j",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "dim",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "dim",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getDimension",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "dim",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "tmp",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        }, {
                          "name" : "dim",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      }, {
                        "name" : "dim",
                        "type" : "Identifier"
                      }, {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "j",
                          "type" : "Identifier"
                        }, {
                          "name" : "dim",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "setOrdinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "j",
                        "type" : "Identifier"
                      }, {
                        "name" : "dim",
                        "type" : "Identifier"
                      }, {
                        "name" : "tmp",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "copy",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "src",
              "type" : "Identifier"
            }, {
              "name" : "srcPos",
              "type" : "Identifier"
            }, {
              "name" : "dest",
              "type" : "Identifier"
            }, {
              "name" : "destPos",
              "type" : "Identifier"
            }, {
              "name" : "length",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "length",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "name" : "CoordinateSequences",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "copyCoord",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "src",
                        "type" : "Identifier"
                      }, {
                        "operator" : "+",
                        "left" : {
                          "name" : "srcPos",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      }, {
                        "name" : "dest",
                        "type" : "Identifier"
                      }, {
                        "operator" : "+",
                        "left" : {
                          "name" : "destPos",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "ensureValidRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "fact",
              "type" : "Identifier"
            }, {
              "name" : "seq",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "name" : "seq",
                    "type" : "Identifier"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "<=",
                  "left" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "3",
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "argument" : {
                    "callee" : {
                      "object" : {
                        "name" : "CoordinateSequences",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "createClosedRing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "fact",
                      "type" : "Identifier"
                    }, {
                      "name" : "seq",
                      "type" : "Identifier"
                    }, {
                      "value" : "4",
                      "raw" : "4",
                      "type" : "Literal"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "isClosed",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "&&",
                    "left" : {
                      "operator" : "===",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        }, {
                          "object" : {
                            "name" : "CoordinateSequence",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "X",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "operator" : "-",
                          "left" : {
                            "name" : "n",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        }, {
                          "object" : {
                            "name" : "CoordinateSequence",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "X",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "===",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        }, {
                          "object" : {
                            "name" : "CoordinateSequence",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "Y",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getOrdinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "operator" : "-",
                          "left" : {
                            "name" : "n",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        }, {
                          "object" : {
                            "name" : "CoordinateSequence",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "Y",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "name" : "isClosed",
                  "type" : "Identifier"
                },
                "consequent" : {
                  "argument" : {
                    "name" : "seq",
                    "type" : "Identifier"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "CoordinateSequences",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "createClosedRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "fact",
                    "type" : "Identifier"
                  }, {
                    "name" : "seq",
                    "type" : "Identifier"
                  }, {
                    "operator" : "+",
                    "left" : {
                      "name" : "n",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "indexOf",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "coordinate",
              "type" : "Identifier"
            }, {
              "name" : "seq",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "operator" : "===",
                        "left" : {
                          "object" : {
                            "name" : "coordinate",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "x",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "callee" : {
                            "object" : {
                              "name" : "seq",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getOrdinate",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "i",
                            "type" : "Identifier"
                          }, {
                            "object" : {
                              "name" : "CoordinateSequence",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "X",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : "===",
                        "left" : {
                          "object" : {
                            "name" : "coordinate",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "y",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "callee" : {
                            "object" : {
                              "name" : "seq",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getOrdinate",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "i",
                            "type" : "Identifier"
                          }, {
                            "object" : {
                              "name" : "CoordinateSequence",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "Y",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "ReturnStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "operator" : "-",
                  "prefix" : true,
                  "argument" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "createClosedRing",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "fact",
              "type" : "Identifier"
            }, {
              "name" : "seq",
              "type" : "Identifier"
            }, {
              "name" : "size",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "newseq",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "fact",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "create",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "size",
                      "type" : "Identifier"
                    }, {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getDimension",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "n",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "CoordinateSequences",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "copy",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "seq",
                    "type" : "Identifier"
                  }, {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  }, {
                    "name" : "newseq",
                    "type" : "Identifier"
                  }, {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  }, {
                    "name" : "n",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "name" : "n",
                      "type" : "Identifier"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "size",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "name" : "CoordinateSequences",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "copy",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "seq",
                      "type" : "Identifier"
                    }, {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    }, {
                      "name" : "newseq",
                      "type" : "Identifier"
                    }, {
                      "name" : "i",
                      "type" : "Identifier"
                    }, {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "name" : "newseq",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "minCoordinate",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "seq",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "minCoord",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "init" : {
                  "declarations" : [ {
                    "id" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                },
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "seq",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "update" : {
                  "operator" : "++",
                  "prefix" : false,
                  "argument" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "type" : "UnaryExpression"
                },
                "body" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "testCoord",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "callee" : {
                          "object" : {
                            "name" : "seq",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getCoordinate",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "i",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "||",
                      "left" : {
                        "operator" : "===",
                        "left" : {
                          "name" : "minCoord",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : null,
                          "raw" : "null",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "minCoord",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "compareTo",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "testCoord",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "value" : "0",
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "name" : "minCoord",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "testCoord",
                            "type" : "Identifier"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "type" : "ForStatement"
              }, {
                "argument" : {
                  "name" : "minCoord",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  } ],
  "type" : "Program"
}