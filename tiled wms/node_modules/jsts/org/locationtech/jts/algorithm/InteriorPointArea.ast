{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/Coordinate'",
      "raw" : "'../geom/Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Polygon",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/Polygon'",
      "raw" : "'../geom/Polygon'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Double",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/lang/Double'",
      "raw" : "'../../../../java/lang/Double'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "GeometryCollection",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../geom/GeometryCollection'",
      "raw" : "'../geom/GeometryCollection'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "ArrayList",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/util/ArrayList'",
      "raw" : "'../../../../java/util/ArrayList'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Comparator",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/util/Comparator'",
      "raw" : "'../../../../java/util/Comparator'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "Assert",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../util/Assert'",
      "raw" : "'../util/Assert'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "InteriorPointArea",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "constructor",
            "type" : "Identifier"
          },
          "value" : {
            "params" : null,
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointArea",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "object" : {
                        "name" : "constructor_",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "apply",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "type" : "ThisExpression"
                  }, {
                    "name" : "arguments",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "constructor",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "constructor_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_interiorPoint",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_maxWidth",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "operator" : "-",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "g",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "arguments",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "value" : 0,
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "process",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "g",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getInteriorPoint",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "geom",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "intPt",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "InteriorPointArea",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "geom",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "intPt",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getInteriorPoint",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "avg",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "a",
              "type" : "Identifier"
            }, {
              "name" : "b",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "operator" : "/",
                  "left" : {
                    "operator" : "+",
                    "left" : {
                      "name" : "a",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "b",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "right" : {
                    "value" : "2.0",
                    "raw" : "2.0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "getInteriorPoint",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorPoint",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "process",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "geom",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "callee" : {
                    "object" : {
                      "name" : "geom",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isEmpty",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "consequent" : {
                  "argument" : {
                    "value" : null,
                    "raw" : "null",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "test" : {
                  "operator" : "instanceof",
                  "left" : {
                    "name" : "geom",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "Polygon",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "callee" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "processPolygon",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "geom",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : {
                  "test" : {
                    "operator" : "instanceof",
                    "left" : {
                      "name" : "geom",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "GeometryCollection",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "declarations" : [ {
                        "id" : {
                          "name" : "gc",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "name" : "geom",
                          "type" : "Identifier"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "init" : {
                        "declarations" : [ {
                          "id" : {
                            "name" : "i",
                            "type" : "Identifier"
                          },
                          "init" : {
                            "value" : "0",
                            "raw" : "0",
                            "type" : "Literal"
                          },
                          "type" : "VariableDeclarator"
                        } ],
                        "kind" : "let",
                        "type" : "VariableDeclaration"
                      },
                      "test" : {
                        "operator" : "<",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "callee" : {
                            "object" : {
                              "name" : "gc",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getNumGeometries",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "update" : {
                        "operator" : "++",
                        "prefix" : false,
                        "argument" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "type" : "UnaryExpression"
                      },
                      "body" : {
                        "body" : [ {
                          "expression" : {
                            "callee" : {
                              "object" : {
                                "type" : "ThisExpression"
                              },
                              "property" : {
                                "name" : "process",
                                "type" : "Identifier"
                              },
                              "computed" : false,
                              "type" : "MemberExpression"
                            },
                            "arguments" : [ {
                              "callee" : {
                                "object" : {
                                  "name" : "gc",
                                  "type" : "Identifier"
                                },
                                "property" : {
                                  "name" : "getGeometryN",
                                  "type" : "Identifier"
                                },
                                "computed" : false,
                                "type" : "MemberExpression"
                              },
                              "arguments" : [ {
                                "name" : "i",
                                "type" : "Identifier"
                              } ],
                              "type" : "CallExpression"
                            } ],
                            "type" : "CallExpression"
                          },
                          "type" : "ExpressionStatement"
                        } ],
                        "type" : "BlockStatement"
                      },
                      "type" : "ForStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                },
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "processPolygon",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "polygon",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "intPtPoly",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "name" : "InteriorPointPolygon",
                      "type" : "Identifier"
                    },
                    "arguments" : [ {
                      "name" : "polygon",
                      "type" : "Identifier"
                    } ],
                    "type" : "NewExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "intPtPoly",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "process",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "width",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "intPtPoly",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getWidth",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "width",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_maxWidth",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_maxWidth",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "width",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_interiorPoint",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "intPtPoly",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getInteriorPoint",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : false,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "id" : {
      "name" : "InteriorPointPolygon",
      "type" : "Identifier"
    },
    "body" : {
      "body" : [ {
        "key" : {
          "name" : "constructor",
          "type" : "Identifier"
        },
        "value" : {
          "params" : null,
          "body" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "InteriorPointPolygon",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "object" : {
                      "name" : "constructor_",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "apply",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "name" : "arguments",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "constructor",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "constructor_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_polygon",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorPointY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorSectionWidth",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : "0.0",
                  "raw" : "0.0",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorPoint",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "polygon",
                  "type" : "Identifier"
                },
                "init" : {
                  "object" : {
                    "name" : "arguments",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "value" : 0,
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "computed" : true,
                  "type" : "MemberExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_polygon",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "name" : "polygon",
                  "type" : "Identifier"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorPointY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "ScanLineYOrdinateFinder",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getScanLineY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "polygon",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "isEdgeCrossingCounted",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "p0",
            "type" : "Identifier"
          }, {
            "name" : "p1",
            "type" : "Identifier"
          }, {
            "name" : "scanY",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "y0",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "p0",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "y1",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "p1",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "test" : {
                "operator" : "===",
                "left" : {
                  "name" : "y0",
                  "type" : "Identifier"
                },
                "right" : {
                  "name" : "y1",
                  "type" : "Identifier"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : false,
                  "raw" : "false",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "test" : {
                "operator" : "&&",
                "left" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "y0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "scanY",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "right" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "y1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "scanY",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : false,
                  "raw" : "false",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "test" : {
                "operator" : "&&",
                "left" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "y1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "scanY",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "right" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "y0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "scanY",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : false,
                  "raw" : "false",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "argument" : {
                "value" : true,
                "raw" : "true",
                "type" : "Literal"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "intersectsHorizontalLine",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "test" : {
                "operator" : "===",
                "left" : {
                  "name" : "arguments.length",
                  "type" : "Identifier"
                },
                "right" : {
                  "value" : 2,
                  "raw" : "2",
                  "type" : "Literal"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "env",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 0,
                        "raw" : "0",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  }, {
                    "id" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "object" : {
                        "name" : "arguments",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "value" : 1,
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "computed" : true,
                      "type" : "MemberExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "test" : {
                    "operator" : "<",
                    "left" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMinY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "argument" : {
                      "value" : false,
                      "raw" : "false",
                      "type" : "Literal"
                    },
                    "type" : "ReturnStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                }, {
                  "test" : {
                    "operator" : ">",
                    "left" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "callee" : {
                        "object" : {
                          "name" : "env",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getMaxY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "argument" : {
                      "value" : false,
                      "raw" : "false",
                      "type" : "Literal"
                    },
                    "type" : "ReturnStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                }, {
                  "argument" : {
                    "value" : true,
                    "raw" : "true",
                    "type" : "Literal"
                  },
                  "type" : "ReturnStatement"
                } ],
                "type" : "BlockStatement"
              },
              "alternate" : {
                "test" : {
                  "operator" : "===",
                  "left" : {
                    "name" : "arguments.length",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : 3,
                    "raw" : "3",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "declarations" : [ {
                      "id" : {
                        "name" : "p0",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 0,
                          "raw" : "0",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "p1",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 1,
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    }, {
                      "id" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "init" : {
                        "object" : {
                          "name" : "arguments",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "value" : 2,
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "computed" : true,
                        "type" : "MemberExpression"
                      },
                      "type" : "VariableDeclarator"
                    } ],
                    "kind" : "let",
                    "type" : "VariableDeclaration"
                  }, {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "operator" : ">",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "p0",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "name" : "y",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "p1",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "name" : "y",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "value" : false,
                        "raw" : "false",
                        "type" : "Literal"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "test" : {
                      "operator" : "&&",
                      "left" : {
                        "operator" : "<",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "p0",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "name" : "y",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : "<",
                        "left" : {
                          "callee" : {
                            "object" : {
                              "name" : "p1",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "getY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ ],
                          "type" : "CallExpression"
                        },
                        "right" : {
                          "name" : "y",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "argument" : {
                        "value" : false,
                        "raw" : "false",
                        "type" : "Literal"
                      },
                      "type" : "ReturnStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  }, {
                    "argument" : {
                      "value" : true,
                      "raw" : "true",
                      "type" : "Literal"
                    },
                    "type" : "ReturnStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              },
              "type" : "IfStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "intersection",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "p0",
            "type" : "Identifier"
          }, {
            "name" : "p1",
            "type" : "Identifier"
          }, {
            "name" : "Y",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "x0",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "p0",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getX",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "x1",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "p1",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getX",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "test" : {
                "operator" : "===",
                "left" : {
                  "name" : "x0",
                  "type" : "Identifier"
                },
                "right" : {
                  "name" : "x1",
                  "type" : "Identifier"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "name" : "x0",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "segDX",
                  "type" : "Identifier"
                },
                "init" : {
                  "operator" : "-",
                  "left" : {
                    "name" : "x1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "x0",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "segDY",
                  "type" : "Identifier"
                },
                "init" : {
                  "operator" : "-",
                  "left" : {
                    "callee" : {
                      "object" : {
                        "name" : "p1",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getY",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "right" : {
                    "callee" : {
                      "object" : {
                        "name" : "p0",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getY",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "m",
                  "type" : "Identifier"
                },
                "init" : {
                  "operator" : "/",
                  "left" : {
                    "name" : "segDY",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "segDX",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "x",
                  "type" : "Identifier"
                },
                "init" : {
                  "operator" : "+",
                  "left" : {
                    "name" : "x0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "/",
                    "left" : {
                      "operator" : "-",
                      "left" : {
                        "name" : "Y",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "p0",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "getY",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "m",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "argument" : {
                "name" : "x",
                "type" : "Identifier"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "findBestMidpoint",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "crossings",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "test" : {
                "operator" : "===",
                "left" : {
                  "callee" : {
                    "object" : {
                      "name" : "crossings",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "size",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "right" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "Assert",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "isTrue",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "operator" : "===",
                  "left" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "right" : {
                    "operator" : "%",
                    "left" : {
                      "callee" : {
                        "object" : {
                          "name" : "crossings",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "size",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "right" : {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "BinaryExpression"
                }, {
                  "value" : "Interior Point robustness failure: odd number of scanline crossings",
                  "raw" : "\"Interior Point robustness failure: odd number of scanline crossings\"",
                  "type" : "Literal"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "crossings",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "sort",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "name" : "DoubleComparator",
                    "type" : "Identifier"
                  },
                  "arguments" : [ ],
                  "type" : "NewExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "init" : {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              },
              "test" : {
                "operator" : "<",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "crossings",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "size",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "update" : {
                "operator" : "+=",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "value" : "2",
                  "raw" : "2",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "body" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "x1",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "crossings",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "get",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "declarations" : [ {
                    "id" : {
                      "name" : "x2",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "crossings",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "get",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "+",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "declarations" : [ {
                    "id" : {
                      "name" : "width",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "operator" : "-",
                      "left" : {
                        "name" : "x2",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "x1",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "test" : {
                    "operator" : ">",
                    "left" : {
                      "name" : "width",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_interiorSectionWidth",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "body" : [ {
                      "expression" : {
                        "operator" : "=",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_interiorSectionWidth",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "name" : "width",
                          "type" : "Identifier"
                        },
                        "type" : "AssignmentExpression"
                      },
                      "type" : "ExpressionStatement"
                    }, {
                      "declarations" : [ {
                        "id" : {
                          "name" : "interiorPointX",
                          "type" : "Identifier"
                        },
                        "init" : {
                          "callee" : {
                            "object" : {
                              "name" : "InteriorPointArea",
                              "type" : "Identifier"
                            },
                            "property" : {
                              "name" : "avg",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "arguments" : [ {
                            "name" : "x1",
                            "type" : "Identifier"
                          }, {
                            "name" : "x2",
                            "type" : "Identifier"
                          } ],
                          "type" : "CallExpression"
                        },
                        "type" : "VariableDeclarator"
                      } ],
                      "kind" : "let",
                      "type" : "VariableDeclaration"
                    }, {
                      "expression" : {
                        "operator" : "=",
                        "left" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_interiorPoint",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "right" : {
                          "callee" : {
                            "name" : "Coordinate",
                            "type" : "Identifier"
                          },
                          "arguments" : [ {
                            "name" : "interiorPointX",
                            "type" : "Identifier"
                          }, {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_interiorPointY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          } ],
                          "type" : "NewExpression"
                        },
                        "type" : "AssignmentExpression"
                      },
                      "type" : "ExpressionStatement"
                    } ],
                    "type" : "BlockStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                } ],
                "type" : "BlockStatement"
              },
              "type" : "ForStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "process",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "test" : {
                "callee" : {
                  "object" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_polygon",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "property" : {
                    "name" : "isEmpty",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ ],
                "type" : "CallExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_interiorPoint",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "callee" : {
                    "name" : "Coordinate",
                    "type" : "Identifier"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_polygon",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "property" : {
                        "name" : "getCoordinate",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  } ],
                  "type" : "NewExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "crossings",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "name" : "ArrayList",
                    "type" : "Identifier"
                  },
                  "arguments" : [ ],
                  "type" : "NewExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "scanRing",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_polygon",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "getExteriorRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                }, {
                  "name" : "crossings",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "init" : {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              },
              "test" : {
                "operator" : "<",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_polygon",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "getNumInteriorRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "update" : {
                "operator" : "++",
                "prefix" : false,
                "argument" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "type" : "UnaryExpression"
              },
              "body" : {
                "body" : [ {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "scanRing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_polygon",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "getInteriorRingN",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    }, {
                      "name" : "crossings",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                } ],
                "type" : "BlockStatement"
              },
              "type" : "ForStatement"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "findBestMidpoint",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "crossings",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "scanRing",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "ring",
            "type" : "Identifier"
          }, {
            "name" : "crossings",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "test" : {
                "operator" : "!",
                "prefix" : true,
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointPolygon",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "intersectsHorizontalLine",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "name" : "ring",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "getEnvelopeInternal",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ ],
                    "type" : "CallExpression"
                  }, {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_interiorPointY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "UnaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "seq",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "ring",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getCoordinateSequence",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "init" : {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              },
              "test" : {
                "operator" : "<",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "seq",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "size",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "update" : {
                "operator" : "++",
                "prefix" : false,
                "argument" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "type" : "UnaryExpression"
              },
              "body" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "ptPrev",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getCoordinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "operator" : "-",
                        "left" : {
                          "name" : "i",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "declarations" : [ {
                    "id" : {
                      "name" : "pt",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getCoordinate",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "addEdgeCrossing",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "ptPrev",
                      "type" : "Identifier"
                    }, {
                      "name" : "pt",
                      "type" : "Identifier"
                    }, {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_interiorPointY",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    }, {
                      "name" : "crossings",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                } ],
                "type" : "BlockStatement"
              },
              "type" : "ForStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "getWidth",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "object" : {
                  "type" : "ThisExpression"
                },
                "property" : {
                  "name" : "_interiorSectionWidth",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "getInteriorPoint",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "object" : {
                  "type" : "ThisExpression"
                },
                "property" : {
                  "name" : "_interiorPoint",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "addEdgeCrossing",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "p0",
            "type" : "Identifier"
          }, {
            "name" : "p1",
            "type" : "Identifier"
          }, {
            "name" : "scanY",
            "type" : "Identifier"
          }, {
            "name" : "crossings",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "test" : {
                "operator" : "!",
                "prefix" : true,
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointPolygon",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "intersectsHorizontalLine",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "p0",
                    "type" : "Identifier"
                  }, {
                    "name" : "p1",
                    "type" : "Identifier"
                  }, {
                    "name" : "scanY",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "UnaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "test" : {
                "operator" : "!",
                "prefix" : true,
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointPolygon",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "isEdgeCrossingCounted",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "p0",
                    "type" : "Identifier"
                  }, {
                    "name" : "p1",
                    "type" : "Identifier"
                  }, {
                    "name" : "scanY",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "UnaryExpression"
              },
              "consequent" : {
                "argument" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "ReturnStatement"
              },
              "alternate" : null,
              "type" : "IfStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "xInt",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointPolygon",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "intersection",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "p0",
                    "type" : "Identifier"
                  }, {
                    "name" : "p1",
                    "type" : "Identifier"
                  }, {
                    "name" : "scanY",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "crossings",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "add",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "xInt",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      } ],
      "type" : "ClassBody"
    },
    "superClass" : null,
    "type" : "ClassDeclaration"
  }, {
    "id" : {
      "name" : "DoubleComparator",
      "type" : "Identifier"
    },
    "body" : {
      "body" : [ {
        "key" : {
          "name" : "compare",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "v1",
            "type" : "Identifier"
          }, {
            "name" : "v2",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "argument" : {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "v1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "v2",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "alternate" : {
                  "test" : {
                    "operator" : ">",
                    "left" : {
                      "name" : "v1",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "v2",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "alternate" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "consequent" : {
                    "operator" : "+",
                    "prefix" : true,
                    "argument" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "UnaryExpression"
                  },
                  "type" : "ConditionalExpression"
                },
                "consequent" : {
                  "operator" : "-",
                  "prefix" : true,
                  "argument" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "ConditionalExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "interfaces_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "argument" : {
                "elements" : [ {
                  "name" : "Comparator",
                  "type" : "Identifier"
                } ],
                "type" : "ArrayExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "get",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      } ],
      "type" : "ClassBody"
    },
    "superClass" : null,
    "type" : "ClassDeclaration"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "InteriorPointPolygon",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "DoubleComparator",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "DoubleComparator",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "id" : {
      "name" : "ScanLineYOrdinateFinder",
      "type" : "Identifier"
    },
    "body" : {
      "body" : [ {
        "key" : {
          "name" : "constructor",
          "type" : "Identifier"
        },
        "value" : {
          "params" : null,
          "body" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "name" : "ScanLineYOrdinateFinder",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "object" : {
                      "name" : "constructor_",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "apply",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "type" : "ThisExpression"
                }, {
                  "name" : "arguments",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "constructor",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "constructor_",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_poly",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_centreY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : null,
                  "raw" : "null",
                  "type" : "Literal"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_hiY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "object" : {
                    "name" : "Double",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "MAX_VALUE",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_loY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "operator" : "-",
                  "prefix" : true,
                  "argument" : {
                    "object" : {
                      "name" : "Double",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "MAX_VALUE",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "UnaryExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "poly",
                  "type" : "Identifier"
                },
                "init" : {
                  "object" : {
                    "name" : "arguments",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "value" : 0,
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "computed" : true,
                  "type" : "MemberExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_poly",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "name" : "poly",
                  "type" : "Identifier"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_hiY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "callee" : {
                        "object" : {
                          "name" : "poly",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getEnvelopeInternal",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "property" : {
                      "name" : "getMaxY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_loY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "callee" : {
                        "object" : {
                          "name" : "poly",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getEnvelopeInternal",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ ],
                      "type" : "CallExpression"
                    },
                    "property" : {
                      "name" : "getMinY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "expression" : {
                "operator" : "=",
                "left" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_centreY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointArea",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "avg",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_loY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  }, {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_hiY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "AssignmentExpression"
              },
              "type" : "ExpressionStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "getScanLineY",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "poly",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "finder",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "name" : "ScanLineYOrdinateFinder",
                    "type" : "Identifier"
                  },
                  "arguments" : [ {
                    "name" : "poly",
                    "type" : "Identifier"
                  } ],
                  "type" : "NewExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "argument" : {
                "callee" : {
                  "object" : {
                    "name" : "finder",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "getScanLineY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ ],
                "type" : "CallExpression"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : true,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "updateInterval",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "y",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "test" : {
                "operator" : "<=",
                "left" : {
                  "name" : "y",
                  "type" : "Identifier"
                },
                "right" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "_centreY",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "type" : "BinaryExpression"
              },
              "consequent" : {
                "body" : [ {
                  "test" : {
                    "operator" : ">",
                    "left" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_loY",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "consequent" : {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_loY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "right" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  },
                  "alternate" : null,
                  "type" : "IfStatement"
                } ],
                "type" : "BlockStatement"
              },
              "alternate" : {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "y",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_centreY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "type" : "ThisExpression"
                        },
                        "property" : {
                          "name" : "_hiY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "consequent" : {
                      "body" : [ {
                        "expression" : {
                          "operator" : "=",
                          "left" : {
                            "object" : {
                              "type" : "ThisExpression"
                            },
                            "property" : {
                              "name" : "_hiY",
                              "type" : "Identifier"
                            },
                            "computed" : false,
                            "type" : "MemberExpression"
                          },
                          "right" : {
                            "name" : "y",
                            "type" : "Identifier"
                          },
                          "type" : "AssignmentExpression"
                        },
                        "type" : "ExpressionStatement"
                      } ],
                      "type" : "BlockStatement"
                    },
                    "alternate" : null,
                    "type" : "IfStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              },
              "type" : "IfStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "getScanLineY",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ ],
          "body" : {
            "body" : [ {
              "expression" : {
                "callee" : {
                  "object" : {
                    "type" : "ThisExpression"
                  },
                  "property" : {
                    "name" : "process",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_poly",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "getExteriorRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                } ],
                "type" : "CallExpression"
              },
              "type" : "ExpressionStatement"
            }, {
              "init" : {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              },
              "test" : {
                "operator" : "<",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "_poly",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "property" : {
                      "name" : "getNumInteriorRing",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "update" : {
                "operator" : "++",
                "prefix" : false,
                "argument" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "type" : "UnaryExpression"
              },
              "body" : {
                "body" : [ {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "process",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "object" : {
                            "type" : "ThisExpression"
                          },
                          "property" : {
                            "name" : "_poly",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "property" : {
                          "name" : "getInteriorRingN",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                } ],
                "type" : "BlockStatement"
              },
              "type" : "ForStatement"
            }, {
              "declarations" : [ {
                "id" : {
                  "name" : "scanLineY",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "InteriorPointArea",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "avg",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_hiY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  }, {
                    "object" : {
                      "type" : "ThisExpression"
                    },
                    "property" : {
                      "name" : "_loY",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "argument" : {
                "name" : "scanLineY",
                "type" : "Identifier"
              },
              "type" : "ReturnStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      }, {
        "key" : {
          "name" : "process",
          "type" : "Identifier"
        },
        "value" : {
          "params" : [ {
            "name" : "line",
            "type" : "Identifier"
          } ],
          "body" : {
            "body" : [ {
              "declarations" : [ {
                "id" : {
                  "name" : "seq",
                  "type" : "Identifier"
                },
                "init" : {
                  "callee" : {
                    "object" : {
                      "name" : "line",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "getCoordinateSequence",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "let",
              "type" : "VariableDeclaration"
            }, {
              "init" : {
                "declarations" : [ {
                  "id" : {
                    "name" : "i",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              },
              "test" : {
                "operator" : "<",
                "left" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "seq",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "size",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "update" : {
                "operator" : "++",
                "prefix" : false,
                "argument" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "type" : "UnaryExpression"
              },
              "body" : {
                "body" : [ {
                  "declarations" : [ {
                    "id" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "init" : {
                      "callee" : {
                        "object" : {
                          "name" : "seq",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "getY",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "name" : "i",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    },
                    "type" : "VariableDeclarator"
                  } ],
                  "kind" : "let",
                  "type" : "VariableDeclaration"
                }, {
                  "expression" : {
                    "callee" : {
                      "object" : {
                        "type" : "ThisExpression"
                      },
                      "property" : {
                        "name" : "updateInterval",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "y",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "ExpressionStatement"
                } ],
                "type" : "BlockStatement"
              },
              "type" : "ForStatement"
            } ],
            "type" : "BlockStatement"
          },
          "generator" : false,
          "type" : "FunctionExpression"
        },
        "kind" : "method",
        "computed" : false,
        "static" : false,
        "type" : "MethodDefinition"
      } ],
      "type" : "ClassBody"
    },
    "superClass" : null,
    "type" : "ClassDeclaration"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "InteriorPointArea",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "InteriorPointPolygon",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "InteriorPointPolygon",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "InteriorPointArea",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "ScanLineYOrdinateFinder",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "name" : "ScanLineYOrdinateFinder",
        "type" : "Identifier"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}