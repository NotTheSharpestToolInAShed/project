{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "Coordinate",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../geom/Coordinate'",
      "raw" : "'../../geom/Coordinate'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "IllegalArgumentException",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../../java/lang/IllegalArgumentException'",
      "raw" : "'../../../../../java/lang/IllegalArgumentException'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "HilbertCode",
        "type" : "Identifier"
      },
      "body" : {
        "body" : [ {
          "key" : {
            "name" : "deinterleave",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "x",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "0x55555555",
                      "raw" : "0x55555555",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "x",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x33333333",
                      "raw" : "0x33333333",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "x",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x0F0F0F0F",
                      "raw" : "0x0F0F0F0F",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "x",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x00FF00FF",
                      "raw" : "0x00FF00FF",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "x",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x0000FFFF",
                      "raw" : "0x0000FFFF",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "x",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "encode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            }, {
              "name" : "x",
              "type" : "Identifier"
            }, {
              "name" : "y",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "lvl",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "levelClamp",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "level",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "<<",
                    "left" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "16",
                        "raw" : "16",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "lvl",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "y",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "<<",
                    "left" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "16",
                        "raw" : "16",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "lvl",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "b",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "value" : "0xFFFF",
                      "raw" : "0xFFFF",
                      "type" : "Literal"
                    },
                    "right" : {
                      "name" : "a",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "c",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "value" : "0xFFFF",
                      "raw" : "0xFFFF",
                      "type" : "Literal"
                    },
                    "right" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "&",
                    "left" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : "^",
                      "left" : {
                        "name" : "y",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "0xFFFF",
                        "raw" : "0xFFFF",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "|",
                    "left" : {
                      "name" : "a",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "a",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "^",
                      "left" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : "&",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "operator" : ">>",
                          "left" : {
                            "name" : "d",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "c",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "^",
                      "left" : {
                        "operator" : "&",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "operator" : ">>",
                          "left" : {
                            "name" : "c",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "value" : "1",
                            "raw" : "1",
                            "type" : "Literal"
                          },
                          "type" : "BinaryExpression"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "d",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "b",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "c",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "operator" : "^",
                          "left" : {
                            "name" : "a",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "b",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "operator" : "^",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "b",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "c",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "operator" : "^",
                          "left" : {
                            "name" : "a",
                            "type" : "Identifier"
                          },
                          "right" : {
                            "name" : "b",
                            "type" : "Identifier"
                          },
                          "type" : "BinaryExpression"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "operator" : "^",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "A",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "b",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "B",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "c",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "d",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "C",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "^=",
                  "left" : {
                    "name" : "D",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "b",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "c",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "operator" : "^",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "b",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "operator" : ">>",
                        "left" : {
                          "name" : "d",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "name" : "C",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "C",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "b",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "name" : "D",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "D",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "|",
                    "left" : {
                      "name" : "b",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : "^",
                      "left" : {
                        "value" : "0xFFFF",
                        "raw" : "0xFFFF",
                        "type" : "Literal"
                      },
                      "right" : {
                        "operator" : "|",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x00FF00FF",
                      "raw" : "0x00FF00FF",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x0F0F0F0F",
                      "raw" : "0x0F0F0F0F",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x33333333",
                      "raw" : "0x33333333",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x55555555",
                      "raw" : "0x55555555",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i1",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "8",
                          "raw" : "8",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x00FF00FF",
                      "raw" : "0x00FF00FF",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i1",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "4",
                          "raw" : "4",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x0F0F0F0F",
                      "raw" : "0x0F0F0F0F",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i1",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x33333333",
                      "raw" : "0x33333333",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "&",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i1",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0x55555555",
                      "raw" : "0x55555555",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "index",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : ">>",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "operator" : "<<",
                        "left" : {
                          "name" : "i1",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "1",
                          "raw" : "1",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "32",
                        "raw" : "32",
                        "type" : "Literal"
                      },
                      "right" : {
                        "operator" : "*",
                        "left" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "right" : {
                          "name" : "lvl",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "Math",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "trunc",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "index",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "checkLevel",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "name" : "level",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "object" : {
                      "name" : "HilbertCode",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "MAX_LEVEL",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "argument" : {
                      "callee" : {
                        "name" : "IllegalArgumentException",
                        "type" : "Identifier"
                      },
                      "arguments" : [ {
                        "operator" : "+",
                        "left" : {
                          "value" : "Level must be in range 0 to ",
                          "raw" : "\"Level must be in range 0 to \"",
                          "type" : "Literal"
                        },
                        "right" : {
                          "object" : {
                            "name" : "HilbertCode",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "MAX_LEVEL",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "type" : "BinaryExpression"
                      } ],
                      "type" : "NewExpression"
                    },
                    "type" : "ThrowStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "size",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "HilbertCode",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "checkLevel",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "level",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "callee" : {
                    "object" : {
                      "name" : "Math",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "trunc",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "pow",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "value" : "2",
                      "raw" : "2",
                      "type" : "Literal"
                    }, {
                      "operator" : "*",
                      "left" : {
                        "value" : "2",
                        "raw" : "2",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "level",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "maxOrdinate",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "HilbertCode",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "checkLevel",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "level",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "operator" : "-",
                  "left" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "trunc",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "callee" : {
                        "object" : {
                          "name" : "Math",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "pow",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "arguments" : [ {
                        "value" : "2",
                        "raw" : "2",
                        "type" : "Literal"
                      }, {
                        "name" : "level",
                        "type" : "Identifier"
                      } ],
                      "type" : "CallExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "right" : {
                    "value" : "1",
                    "raw" : "1",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "prefixScan",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "x",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "8",
                        "raw" : "8",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "4",
                        "raw" : "4",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "2",
                        "raw" : "2",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : ">>",
                      "left" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "x",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "x",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "decode",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            }, {
              "name" : "index",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "expression" : {
                  "callee" : {
                    "object" : {
                      "name" : "HilbertCode",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "checkLevel",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "level",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "lvl",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "levelClamp",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "level",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "index",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "<<",
                    "left" : {
                      "name" : "index",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "32",
                        "raw" : "32",
                        "type" : "Literal"
                      },
                      "right" : {
                        "operator" : "*",
                        "left" : {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        },
                        "right" : {
                          "name" : "lvl",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "i0",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "deinterleave",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "index",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "i1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "deinterleave",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "operator" : ">>",
                      "left" : {
                        "name" : "index",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "t0",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "^",
                    "left" : {
                      "operator" : "|",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "value" : "0xFFFF",
                      "raw" : "0xFFFF",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "t1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "&",
                    "left" : {
                      "name" : "i0",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "i1",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "prefixT0",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "prefixScan",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "t0",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "prefixT1",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "prefixScan",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "t1",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "a",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : "|",
                    "left" : {
                      "operator" : "&",
                      "left" : {
                        "operator" : "^",
                        "left" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "value" : "0xFFFF",
                          "raw" : "0xFFFF",
                          "type" : "Literal"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "name" : "prefixT1",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "&",
                      "left" : {
                        "name" : "i0",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "prefixT0",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "x",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : ">>",
                    "left" : {
                      "operator" : "^",
                      "left" : {
                        "name" : "a",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "16",
                        "raw" : "16",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "lvl",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "y",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "operator" : ">>",
                    "left" : {
                      "operator" : "^",
                      "left" : {
                        "operator" : "^",
                        "left" : {
                          "name" : "a",
                          "type" : "Identifier"
                        },
                        "right" : {
                          "name" : "i0",
                          "type" : "Identifier"
                        },
                        "type" : "BinaryExpression"
                      },
                      "right" : {
                        "name" : "i1",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "operator" : "-",
                      "left" : {
                        "value" : "16",
                        "raw" : "16",
                        "type" : "Literal"
                      },
                      "right" : {
                        "name" : "lvl",
                        "type" : "Identifier"
                      },
                      "type" : "BinaryExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "argument" : {
                  "callee" : {
                    "name" : "Coordinate",
                    "type" : "Identifier"
                  },
                  "arguments" : [ {
                    "name" : "x",
                    "type" : "Identifier"
                  }, {
                    "name" : "y",
                    "type" : "Identifier"
                  } ],
                  "type" : "NewExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "levelClamp",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "level",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "lvl",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "test" : {
                      "operator" : "<",
                      "left" : {
                        "name" : "level",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "alternate" : {
                      "name" : "level",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "ConditionalExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "lvl",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "test" : {
                      "operator" : ">",
                      "left" : {
                        "name" : "lvl",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "object" : {
                          "name" : "HilbertCode",
                          "type" : "Identifier"
                        },
                        "property" : {
                          "name" : "MAX_LEVEL",
                          "type" : "Identifier"
                        },
                        "computed" : false,
                        "type" : "MemberExpression"
                      },
                      "type" : "BinaryExpression"
                    },
                    "alternate" : {
                      "name" : "lvl",
                      "type" : "Identifier"
                    },
                    "consequent" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "MAX_LEVEL",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "ConditionalExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "argument" : {
                  "name" : "lvl",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        }, {
          "key" : {
            "name" : "level",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ {
              "name" : "numPoints",
              "type" : "Identifier"
            } ],
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "pow2",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "trunc",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "operator" : "/",
                      "left" : {
                        "callee" : {
                          "object" : {
                            "name" : "Math",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "log",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "name" : "numPoints",
                          "type" : "Identifier"
                        } ],
                        "type" : "CallExpression"
                      },
                      "right" : {
                        "callee" : {
                          "object" : {
                            "name" : "Math",
                            "type" : "Identifier"
                          },
                          "property" : {
                            "name" : "log",
                            "type" : "Identifier"
                          },
                          "computed" : false,
                          "type" : "MemberExpression"
                        },
                        "arguments" : [ {
                          "value" : "2",
                          "raw" : "2",
                          "type" : "Literal"
                        } ],
                        "type" : "CallExpression"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "level",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "Math",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "trunc",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "operator" : "/",
                      "left" : {
                        "name" : "pow2",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "2",
                        "raw" : "2",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "declarations" : [ {
                  "id" : {
                    "name" : "size",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "callee" : {
                      "object" : {
                        "name" : "HilbertCode",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "size",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "arguments" : [ {
                      "name" : "level",
                      "type" : "Identifier"
                    } ],
                    "type" : "CallExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "let",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "size",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "name" : "numPoints",
                    "type" : "Identifier"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "+=",
                    "left" : {
                      "name" : "level",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              }, {
                "argument" : {
                  "name" : "level",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "method",
          "computed" : false,
          "static" : true,
          "type" : "MethodDefinition"
        } ],
        "type" : "ClassBody"
      },
      "superClass" : null,
      "type" : "ClassDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "HilbertCode",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "MAX_LEVEL",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "value" : "16",
        "raw" : "16",
        "type" : "Literal"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}